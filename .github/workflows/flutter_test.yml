name: Flutter Test

on:
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:
  workflow_call:

concurrency: 
  group: ${{ github.head_ref || github.run_id}}
  cancel-in-progress: true

jobs:
  changes:
    name: 'Detect changes'
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      lib: ${{ steps.filter.outputs.lib }}
      test: ${{ steps.filter.outputs.test }}
      android: ${{ steps.filter.outputs.android }}
      linux: ${{ steps.filter.outputs.linux }}
      macos: ${{ steps.filter.outputs.macos }}
      yaml: ${{ steps.filter.outputs.yaml }}
      windows: ${{ steps.filter.outputs.windows }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          lib:
            - 'lib/**'
          android:
            - 'android/**'
          test:
            - 'test/**'
          linux:
            - 'linux/**'
          macos:
            - 'macos/**'
          yaml:
            - '*.yaml'
          windows:
            - 'windows/**'
  
  flutter-test:
    name: 'Flutter Analyze + Test'
    strategy:
      matrix:
        os: [macos, ubuntu, windows]
    needs: changes
    if: ${{ needs.changes.outputs.lib == 'true' || needs.changes.outputs.test == 'true' || needs.changes.outputs.yaml == 'true' || needs.changes.outputs.android == 'true' || needs.changes.outputs.linux == 'true' || needs.changes.outputs.macos == 'true' || needs.changes.outputs.windows == 'true' }}
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: temurin
          java-version: '17'
      - name: Flutter action
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          pub-cache-key: "flutter-pub-:os:-:channel:-:version:-:arch:-:hash:"
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - name: Flutter version
        run: flutter --version
      - name: Cache build runner
        uses: actions/cache@v4.0.2
        with:
          path: |
            **/.dart_tool
            **/*.g.dart
            **/*.mocks.dart
            **/*.config.dart
          key: build-runner-${{ hashFiles('**/asset_graph.json', '**/*.dart', '**/pubspec.lock', '**/outputs.json') }}
          restore-keys: |
            build-runner-${{ hashFiles('**/asset_graph.json', '**/*.dart', '**/pubspec.lock', '**/outputs.json') }}
            build-runner-
      - name: Download pub dependencies
        run: flutter pub get
      - name: Run build_runner
        run: flutter pub run build_runner build
      - name: Run analyzer
        run: flutter analyze
      - name: Install coverage tools
        run: flutter pub global activate coverage
      - name: Run tests
        run: flutter test
      - name: Run integration tests
        if: needs.changes.extract_branch.outputs.branch == 'dev'
        run: flutter test integration_test --coverage -d ${{ matrix.os == 'ubuntu' && 'linux' || matrix.os }} 
      - name: Upload Coverage to CodeCov
        if: needs.changes.extract_branch.outputs.branch == 'dev'
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: coverage/lcov.info

  flutter_build:
    name: 'Build flutter'
    strategy:
      matrix:
        os: [macos, windows, ubuntu]
    needs: [changes, flutter-test]
    if: ${{ (needs.changes.outputs.lib == 'true' || needs.changes.outputs.test == 'true' || needs.changes.outputs.android == 'true' || needs.changes.outputs.linux == 'true' || needs.changes.outputs.macos == 'true' || needs.changes.outputs.windows == 'true' || needs.changes.outputs.yaml == 'true') && (needs.changes.extract_branch.outputs.branch == 'dev') }}
    runs-on: ${{ matrix.os }}-latest 
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: temurin
          java-version: '17'
      - name: Flutter action
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          pub-cache-key: "flutter-pub-:os:-:channel:-:version:-:arch:-:hash:"
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - name: Cache build runner
        uses: actions/cache@v4.0.2
        with:
          path: |
            **/.dart_tool
            **/*.g.dart
            **/*.mocks.dart
            **/*.config.dart
          key: build-runner-${{ hashFiles('**/asset_graph.json', '**/*.dart', '**/pubspec.lock', '**/outputs.json') }}
          restore-keys: |
            build-runner-${{ hashFiles('**/asset_graph.json', '**/*.dart', '**/pubspec.lock', '**/outputs.json') }}
            build-runner-
      - name: Cache pods
        if: ${{ (matrix.os == 'macos') && (needs.changes.extract_branch.outputs.branch == 'dev') && (needs.changes.outputs.lib == 'true' || needs.changes.outputs.test == 'true' || needs.changes.outputs.macos == 'true' || needs.changes.outputs.yaml == 'true' ) }}
        uses: actions/cache@v3
        with:
          path: macos/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
            ${{ runner.os }}-pods-
      - name: Download pub dependencies
        run: flutter pub get
      - name: Run build_runner
        run: flutter pub run build_runner build
      - name: Build Android
        if: ${{ (matrix.os == 'ubuntu') && (needs.changes.extract_branch.outputs.branch == 'dev')  && (needs.changes.outputs.lib == 'true' || needs.changes.outputs.test == 'true' || needs.changes.outputs.android == 'true' || needs.changes.outputs.yaml == 'true' )}}
        run: |
          flutter build apk --debug --flavor dev
          
      # Run only if test, lib, and linux folder is changed
      - name: Install Linux dependencies
        if: ${{ (matrix.os == 'ubuntu') && (needs.changes.extract_branch.outputs.branch == 'dev')  && (needs.changes.outputs.lib == 'true' || needs.changes.outputs.test == 'true' || needs.changes.outputs.linux == 'true' || needs.changes.outputs.yaml == 'true') }}
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Build Linux 
        if: ${{ (needs.changes.extract_branch.outputs.branch == 'dev') && (needs.changes.outputs.lib == 'true' || needs.changes.outputs.test == 'true' || needs.changes.outputs.linux == 'true' || needs.changes.outputs.macos == 'true' || needs.changes.outputs.windows == 'true' || needs.changes.outputs.yaml == 'true') }}
        run: flutter build ${{ matrix.os == 'ubuntu' && 'linux' || matrix.os }}